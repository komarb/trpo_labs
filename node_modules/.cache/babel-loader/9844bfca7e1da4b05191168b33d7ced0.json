{"ast":null,"code":"var _jsxFileName = \"/Users/adastras/WebstormProjects/timezones/src/index.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport ReactDOM from 'react-dom';\nimport { timezones } from \"./timezones\";\n\nclass MyTimezonePicker extends React.Component {\n  constructor(props) {\n    super(props);\n    /*this.timezoneOptions = timezones.map((timezone,index) =>\n        <option value={timezone.offset} key={index}>\n            {timezone.text}\n        </option>\n    );*/\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n\n    this.state = {\n      selectedOption: \"Dateline Standard Time\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /*handleChange(event) {\n      this.setState({selectedOption: event.target.value}, () => {\n          this.props.offsetHandler(this.state.offset);\n      });\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Select, {\n      value: this.state.selectedOption,\n      onChange: this.handleChange,\n      options: timezones,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      offsetDate: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    let OD = new Date();\n    OD.setHours(OD.getUTCHours() + parseInt(this.props.offset));\n    this.setState({\n      date: new Date()\n    });\n    this.setState({\n      offsetDate: OD\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"It is \", this.state.date.toLocaleTimeString(), \" in Moscow.\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"It is \", this.state.offsetDate.toLocaleTimeString(), \" in\"));\n  }\n\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Clock, {\n      offset: this.state.offset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MyTimezonePicker, {\n      offsetHandler: off => {\n        this.setState({\n          offset: off\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/adastras/WebstormProjects/timezones/src/index.js"],"names":["React","Select","ReactDOM","timezones","MyTimezonePicker","Component","constructor","props","handleChange","selectedOption","setState","state","bind","render","Clock","date","Date","offsetDate","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","OD","setHours","getUTCHours","parseInt","offset","toLocaleTimeString","App","off","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select from 'react-select';\nimport ReactDOM from 'react-dom'\nimport {timezones} from \"./timezones\";\n\nclass MyTimezonePicker extends React.Component {\n    constructor(props) {\n        super(props);\n        /*this.timezoneOptions = timezones.map((timezone,index) =>\n            <option value={timezone.offset} key={index}>\n                {timezone.text}\n            </option>\n        );*/\n        this.state = {selectedOption: \"Dateline Standard Time\"};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /*handleChange(event) {\n        this.setState({selectedOption: event.target.value}, () => {\n            this.props.offsetHandler(this.state.offset);\n        });\n    }*/\n    handleChange = selectedOption => {\n        this.setState({selectedOption}, )\n    }\n    render() {\n        return (\n            <Select\n                value={this.state.selectedOption}\n                onChange={this.handleChange}\n                options={timezones}\n            />\n        )\n    }\n}\n\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date(),\n            offsetDate: new Date(),\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        let OD = new Date();\n        OD.setHours(OD.getUTCHours()  + parseInt(this.props.offset));\n        this.setState({date: new Date()});\n        this.setState( {offsetDate: OD});\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>It is {this.state.date.toLocaleTimeString()} in Moscow.</h2>\n                <h2>It is {this.state.offsetDate.toLocaleTimeString()} in</h2>\n            </div>\n        );\n    }\n}\n\nexport default class App extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {offset: 0};\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Clock offset={this.state.offset}/>\n                <MyTimezonePicker offsetHandler={off => {\n                    this.setState({offset: off})\n                }}/>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}